{"ast":null,"code":"var _jsxFileName = \"D:\\\\ANJI_PROJECTS_FRONTEND\\\\eCampus\\\\components\\\\profile\\\\profileInfo\\\\phdDetails.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport * as TABLE from \"../../dashboards/styles/table.styles\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport PhdModal from \"../../profile/profile-modals/phdModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faEdit, faTrashAlt, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst PhdDetails = ({\n  isPhData,\n  updatePhdDetails\n}) => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: isPHDdata,\n    1: setIsPHDdata\n  } = useState({});\n\n  const openModal = () => {\n    setShow(!show);\n  };\n\n  const openEditPhd = phd => {\n    setIsPHDdata(data);\n  };\n\n  console.log(\"isPhData\", isPhData);\n  return ___EmotionJSX(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"clearfix px-6 pb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"button\", {\n    type: \"button\",\n    onClick: openModal,\n    className: \"py-2 px-4 rounded float-right bg-blue-400 text-center text-white mb-4 hover:bg-blue-500 focus:outline-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), \" ADD\"), ___EmotionJSX(TABLE.TableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(TABLE.TableTR, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(TABLE.TableTh, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Title of the Research\"), ___EmotionJSX(TABLE.TableTh, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"University\"), ___EmotionJSX(TABLE.TableTh, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Registered Year\"), ___EmotionJSX(TABLE.TableTh, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Status\"), ___EmotionJSX(TABLE.TableTh, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Action\")), !isPhData && ___EmotionJSX(PulseLoader, {\n    size: \"10\",\n    color: \"#3aafa9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), isPhData && isPhData.length && isPhData.map(pInfo => ___EmotionJSX(TABLE.TableTRR, {\n    key: pInfo.phdDetailsID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(TABLE.TableTdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, pInfo.researchTitle), ___EmotionJSX(TABLE.TableTdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, pInfo.university), ___EmotionJSX(TABLE.TableTdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, pInfo.registeredYear), ___EmotionJSX(TABLE.TableTdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, pInfo.status), ___EmotionJSX(TABLE.TableTdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"span\", {\n    className: \"cursor-pointer mr-4 text-blue-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faEdit,\n    onClick: () => openEditPhd(pInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), ___EmotionJSX(\"span\", {\n    className: \"cursor-pointer text-red-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })))))), show && ___EmotionJSX(PhdModal, {\n    openModal: openModal,\n    isPHDdata: isPHDdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 18\n    }\n  })));\n};\n\nexport default PhdDetails;","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/components/profile/profileInfo/phdDetails.js"],"names":["React","useState","TABLE","PulseLoader","PhdModal","FontAwesomeIcon","faSearch","faEdit","faTrashAlt","faPlus","PhdDetails","isPhData","updatePhdDetails","show","setShow","isPHDdata","setIsPHDdata","openModal","openEditPhd","phd","data","console","log","length","map","pInfo","phdDetailsID","researchTitle","university","registeredYear","status"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as TABLE from \"../../dashboards/styles/table.styles\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport PhdModal from \"../../profile/profile-modals/phdModal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSearch,\r\n  faEdit,\r\n  faTrashAlt,\r\n  faPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst PhdDetails = ({ isPhData, updatePhdDetails }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [isPHDdata, setIsPHDdata] = useState({});\r\n  const openModal = () => {\r\n    setShow(!show);\r\n  };\r\n  const openEditPhd = (phd) => {\r\n    setIsPHDdata(data);\r\n  };\r\n  console.log(\"isPhData\", isPhData);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"clearfix px-6 pb-6\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={openModal}\r\n          className=\"py-2 px-4 rounded float-right bg-blue-400 text-center text-white mb-4 hover:bg-blue-500 focus:outline-none\"\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} /> ADD\r\n        </button>\r\n        <TABLE.TableWrapper>\r\n          <TABLE.TableTR>\r\n            <TABLE.TableTh>Title of the Research</TABLE.TableTh>\r\n            <TABLE.TableTh>University</TABLE.TableTh>\r\n            <TABLE.TableTh>Registered Year</TABLE.TableTh>\r\n            <TABLE.TableTh>Status</TABLE.TableTh>\r\n            <TABLE.TableTh>Action</TABLE.TableTh>\r\n          </TABLE.TableTR>\r\n\r\n          {!isPhData && <PulseLoader size=\"10\" color=\"#3aafa9\" />}\r\n\r\n          {isPhData &&\r\n            isPhData.length &&\r\n            isPhData.map((pInfo) => (\r\n              <TABLE.TableTRR key={pInfo.phdDetailsID}>\r\n                <TABLE.TableTdd>{pInfo.researchTitle}</TABLE.TableTdd>\r\n                <TABLE.TableTdd>{pInfo.university}</TABLE.TableTdd>\r\n                <TABLE.TableTdd>{pInfo.registeredYear}</TABLE.TableTdd>\r\n                <TABLE.TableTdd>{pInfo.status}</TABLE.TableTdd>\r\n                <TABLE.TableTdd>\r\n                  <span className=\"cursor-pointer mr-4 text-blue-400\">\r\n                    <FontAwesomeIcon\r\n                      icon={faEdit}\r\n                      onClick={() => openEditPhd(pInfo)}\r\n                    />\r\n                  </span>\r\n                  <span className=\"cursor-pointer text-red-400\">\r\n                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                  </span>\r\n                </TABLE.TableTdd>\r\n              </TABLE.TableTRR>\r\n            ))}\r\n        </TABLE.TableWrapper>\r\n        {show && <PhdModal openModal={openModal} isPHDdata={isPHDdata} />}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PhdDetails;\r\n"]},"metadata":{},"sourceType":"module"}