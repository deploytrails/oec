{"ast":null,"code":"var _jsxFileName = \"D:\\\\ANJI_PROJECTS_FRONTEND\\\\eCampus\\\\pages\\\\profile.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nimport Layout from \"../components/layout\";\nimport TabsWrap from \"../components/profile/tabs\";\nimport { getProfileData, getQualificationDetails, getWorkExpDetails, getBookPubDetails, getResearchGuidlines } from \"../services/profileService\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst Profile = () => {\n  const {\n    0: isProfileData,\n    1: setIsProfileData\n  } = useState({});\n  const {\n    0: isQualificData,\n    1: setisQualificData\n  } = useState({});\n  const {\n    0: isExpData,\n    1: setIsExpData\n  } = useState({});\n  const {\n    0: isBookPubData,\n    1: setIsBookPubData\n  } = useState({});\n  const {\n    0: isResearchGuidData,\n    1: setesearchGuidData\n  } = useState({});\n  const ProfileId = Cookies.get(\"employeeID\"); //fetching profile Details\n\n  const loadProfileData = async () => {\n    const profileInfo = await getProfileData(ProfileId);\n    setIsProfileData(profileInfo);\n  };\n\n  const loadQualificationInfo = async () => {\n    const qualficInfo = await getQualificationDetails(ProfileId);\n    setisQualificData(qualficInfo);\n  };\n\n  const loadExpInfo = async () => {\n    const expInfo = await getWorkExpDetails(ProfileId);\n    setIsExpData(expInfo);\n  };\n\n  const loadBookPubInfo = async () => {\n    const bookPubInfo = await getBookPubDetails(ProfileId);\n    setIsBookPubData(bookPubInfo);\n  };\n\n  const loadResearchGuidInfo = async () => {\n    const rshGuidInfo = await getResearchGuidlines(ProfileId);\n    setesearchGuidData(rshGuidInfo);\n  };\n\n  useEffect(() => {\n    loadProfileData();\n  }, []);\n  useEffect(() => {\n    loadQualificationInfo();\n  }, []);\n  useEffect(() => {\n    loadExpInfo();\n  }, []);\n  useEffect(() => {\n    loadBookPubInfo();\n  }, []);\n  useEffect(() => {\n    loadResearchGuidInfo();\n  }, []);\n  return ___EmotionJSX(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \" bg-white mt-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(TabsWrap, {\n    isProfileData: isProfileData,\n    isQualificData: isQualificData === null || isQualificData === void 0 ? void 0 : isQualificData.profile,\n    isExpeInfo: isExpData.profile,\n    isBookPubInfo: isBookPubData.profile,\n    isResearchGuidData: isResearchGuidData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/pages/profile.js"],"names":["React","useState","useEffect","Cookies","Layout","TabsWrap","getProfileData","getQualificationDetails","getWorkExpDetails","getBookPubDetails","getResearchGuidlines","Profile","isProfileData","setIsProfileData","isQualificData","setisQualificData","isExpData","setIsExpData","isBookPubData","setIsBookPubData","isResearchGuidData","setesearchGuidData","ProfileId","get","loadProfileData","profileInfo","loadQualificationInfo","qualficInfo","loadExpInfo","expInfo","loadBookPubInfo","bookPubInfo","loadResearchGuidInfo","rshGuidInfo","profile"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport Layout from \"../components/layout\";\r\nimport TabsWrap from \"../components/profile/tabs\";\r\nimport {\r\n  getProfileData,\r\n  getQualificationDetails,\r\n  getWorkExpDetails,\r\n  getBookPubDetails,\r\n  getResearchGuidlines,\r\n} from \"../services/profileService\";\r\n\r\nconst Profile = () => {\r\n  const [isProfileData, setIsProfileData] = useState({});\r\n  const [isQualificData, setisQualificData] = useState({});\r\n  const [isExpData, setIsExpData] = useState({});\r\n  const [isBookPubData, setIsBookPubData] = useState({});\r\n  const [isResearchGuidData, setesearchGuidData] = useState({});\r\n  const ProfileId = Cookies.get(\"employeeID\");\r\n  //fetching profile Details\r\n  const loadProfileData = async () => {\r\n    const profileInfo = await getProfileData(ProfileId);\r\n    setIsProfileData(profileInfo);\r\n  };\r\n\r\n  const loadQualificationInfo = async () => {\r\n    const qualficInfo = await getQualificationDetails(ProfileId);\r\n    setisQualificData(qualficInfo);\r\n  };\r\n\r\n  const loadExpInfo = async () => {\r\n    const expInfo = await getWorkExpDetails(ProfileId);\r\n    setIsExpData(expInfo);\r\n  };\r\n\r\n  const loadBookPubInfo = async () => {\r\n    const bookPubInfo = await getBookPubDetails(ProfileId);\r\n    setIsBookPubData(bookPubInfo);\r\n  };\r\n\r\n  const loadResearchGuidInfo = async () => {\r\n    const rshGuidInfo = await getResearchGuidlines(ProfileId);\r\n    setesearchGuidData(rshGuidInfo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProfileData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadQualificationInfo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadExpInfo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadBookPubInfo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadResearchGuidInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Layout>\r\n        <div className=\" bg-white mt-8\">\r\n          <TabsWrap\r\n            isProfileData={isProfileData}\r\n            isQualificData={isQualificData?.profile}\r\n            isExpeInfo={isExpData.profile}\r\n            isBookPubInfo={isBookPubData.profile}\r\n            isResearchGuidData={isResearchGuidData}\r\n          />\r\n        </div>\r\n      </Layout>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}