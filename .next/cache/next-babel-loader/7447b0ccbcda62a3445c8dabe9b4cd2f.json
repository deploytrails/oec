{"ast":null,"code":"import _css from \"@emotion/css\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ANJI_PROJECTS_FRONTEND\\\\eCampus\\\\components\\\\modals\\\\changePassword.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { COLORS } from \"../../constants\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { changePasswordService } from \"../../services/loginService\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar _ref = false ? {\n  name: \"ecl856-modals-ChangePassword\",\n  styles: \"margin-top:10px;& > button{font-weight:600;font-size:14px;padding-top:4px;color:black;text-align:right;display:block;position:absolute;top:0px;right:20px;top:10px;};label:modals-ChangePassword;\"\n} : {\n  name: \"ecl856-modals-ChangePassword\",\n  styles: \"margin-top:10px;& > button{font-weight:600;font-size:14px;padding-top:4px;color:black;text-align:right;display:block;position:absolute;top:0px;right:20px;top:10px;};label:modals-ChangePassword;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref2 = false ? {\n  name: \"17wscdo-modals-ChangePassword\",\n  styles: \"top:50%;left:50%;transform:translate(-50%,-50%);;label:modals-ChangePassword;\"\n} : {\n  name: \"17wscdo-modals-ChangePassword\",\n  styles: \"top:50%;left:50%;transform:translate(-50%,-50%);;label:modals-ChangePassword;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar ChangePassword = function ChangePassword(_ref3) {\n  _s();\n\n  var openChangePassModal = _ref3.openChangePassModal;\n\n  var _useState = useState(),\n      isChangeData = _useState[0],\n      setIsChangeData = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoader = _useState2[0],\n      setIsLoader = _useState2[1];\n\n  var _useState3 = useState(false),\n      isError = _useState3[0],\n      setIsError = _useState3[1]; //YUP validation schema\n\n\n  var loginSchema = Yup.object().shape({\n    changeUserID: Yup.string().required(\"Required\"),\n    changePasswordOld: Yup.string().required(\"Required\"),\n    changePasswordNew: Yup.string().required(\"Required\"),\n    operation: Yup.string()\n  });\n  return ___EmotionJSX(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(\"section\", {\n    className: \"fixed top-0 bottom-0 left-0 right-0 bg-black bg-opacity-50 w-screen h-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"w-4/12 p-6 bg-white absolute rounded shadow-2xl\",\n    css: _ref2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"h3\", {\n    className: \"font-sans font-bold text-center \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Change Password\"), ___EmotionJSX(\"div\", {\n    className: \"block mt-4 border-t border-gray-400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Formik, {\n    initialValues: {\n      changeUserID: \"\",\n      changePasswordOld: \"\",\n      changePasswordNew: \"\",\n      operation: \"changePassword\"\n    },\n    validationSchema: loginSchema,\n    onSubmit: function onSubmit(values) {\n      changePasswordService(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, function (_ref4) {\n    var values = _ref4.values,\n        errors = _ref4.errors,\n        touched = _ref4.touched,\n        handleChange = _ref4.handleChange,\n        handleBlur = _ref4.handleBlur,\n        handleSubmit = _ref4.handleSubmit;\n    return ___EmotionJSX(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, ___EmotionJSX(\"label\", {\n      htmlFor: \"changeUserID relative mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(\"input\", {\n      type: \"text\",\n      name: \"changeUserID\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      placeholder: \"Enter your user name\",\n      value: values.changeUserID,\n      className: \"block w-full text-black py-2 px-4 mt-6 box-border mt-4 rounded border border-gray-400 focus: outline-none\",\n      css: errors.changeUserID && touched.changeUserID && errors.changeUserID && /*#__PURE__*/_css(\"border:1px solid \", COLORS.RED, \";;label:modals-ChangePassword;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), ___EmotionJSX(\"div\", {\n      css: /*#__PURE__*/_css(\"font-size:14px;color:\", COLORS.RED_DARKER, \";;label:modals-ChangePassword;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, errors.changeUserID && touched.changeUserID && errors.changeUserID)), ___EmotionJSX(\"label\", {\n      htmlFor: \"changePasswordOld relative block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(\"input\", {\n      type: \"password\",\n      name: \"changePasswordOld\",\n      placeholder: \"Enter your old password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.changePasswordOld,\n      className: \"block w-full text-black py-2 px-4 box-border mt-4 rounded border border-gray-400 focus: outline-none\",\n      css: errors.changePasswordOld && touched.changePasswordOld && errors.changePasswordOld && /*#__PURE__*/_css(\"border:1px solid \", COLORS.RED, \";;label:modals-ChangePassword;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), ___EmotionJSX(\"div\", {\n      css: /*#__PURE__*/_css(\"font-size:14px;color:\", COLORS.RED_DARKER, \";;label:modals-ChangePassword;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, errors.changePasswordOld && touched.changePasswordOld && errors.changePasswordOld)), ___EmotionJSX(\"label\", {\n      htmlFor: \"changePasswordNew relative block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(\"input\", {\n      type: \"password\",\n      name: \"changePasswordNew\",\n      placeholder: \"Enter your new password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.changePasswordNew,\n      className: \"block w-full text-black py-2 px-4 box-border mt-4 rounded border border-gray-400 focus: outline-none\",\n      css: errors.changePasswordNew && touched.changePasswordNew && errors.changePasswordNew && /*#__PURE__*/_css(\"border:1px solid \", COLORS.RED, \";;label:modals-ChangePassword;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }), ___EmotionJSX(\"div\", {\n      css: /*#__PURE__*/_css(\"font-size:14px;color:\", COLORS.RED_DARKER, \";;label:modals-ChangePassword;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, errors.changePasswordNew && touched.changePasswordNew && errors.changePasswordNew)), ___EmotionJSX(\"button\", {\n      type: \"submit\",\n      className: \"block w-20 m-auto font-medium  bg-green-600 focus:outline-none py-2 px-4 uppercase rounded shadow-2xl text-white mt-4 hover:bg-gray-700\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, isLoader ? ___EmotionJSX(PulseLoader, {\n      size: \"7\",\n      color: \"#fff\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }) : \"Save\"), ___EmotionJSX(\"div\", {\n      className: \"inline-block float-right\",\n      css: _ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), ___EmotionJSX(\"button\", {\n      type: \"button\",\n      className: \"focus:outline-none hover:text-green-900\",\n      onClick: openChangePassModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, ___EmotionJSX(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }))));\n  })))));\n};\n\n_s(ChangePassword, \"nc4xhKyjUhyp2v5x7Z1oez9QdgY=\");\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/components/modals/changePassword.js"],"names":["React","useState","useRouter","Formik","Yup","COLORS","PulseLoader","FontAwesomeIcon","faUser","faTimes","changePasswordService","ChangePassword","openChangePassModal","isChangeData","setIsChangeData","isLoader","setIsLoader","isError","setIsError","loginSchema","object","shape","changeUserID","string","required","changePasswordOld","changePasswordNew","operation","values","errors","touched","handleChange","handleBlur","handleSubmit","RED","RED_DARKER"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport css from \"@emotion/css\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { COLORS } from \"../../constants\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { changePasswordService } from \"../../services/loginService\";\r\n\r\nconst ChangePassword = ({ openChangePassModal }) => {\r\n  const [isChangeData, setIsChangeData] = useState();\r\n  const [isLoader, setIsLoader] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  //YUP validation schema\r\n  const loginSchema = Yup.object().shape({\r\n    changeUserID: Yup.string().required(\"Required\"),\r\n    changePasswordOld: Yup.string().required(\"Required\"),\r\n    changePasswordNew: Yup.string().required(\"Required\"),\r\n    operation: Yup.string(),\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"fixed top-0 bottom-0 left-0 right-0 bg-black bg-opacity-50 w-screen h-screen\">\r\n        <div\r\n          className=\"w-4/12 p-6 bg-white absolute rounded shadow-2xl\"\r\n          css={css`\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n          `}\r\n        >\r\n          <h3 className=\"font-sans font-bold text-center \">Change Password</h3>\r\n          <div className=\"block mt-4 border-t border-gray-400\">\r\n            <Formik\r\n              initialValues={{\r\n                changeUserID: \"\",\r\n                changePasswordOld: \"\",\r\n                changePasswordNew: \"\",\r\n                operation: \"changePassword\",\r\n              }}\r\n              validationSchema={loginSchema}\r\n              onSubmit={(values) => {\r\n                changePasswordService(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <label htmlFor=\"changeUserID relative mb-4\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"changeUserID\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      placeholder=\"Enter your user name\"\r\n                      value={values.changeUserID}\r\n                      className=\"block w-full text-black py-2 px-4 mt-6 box-border mt-4 rounded border border-gray-400 focus: outline-none\"\r\n                      css={\r\n                        errors.changeUserID &&\r\n                        touched.changeUserID &&\r\n                        errors.changeUserID &&\r\n                        css`\r\n                          border: 1px solid ${COLORS.RED};\r\n                        `\r\n                      }\r\n                    />\r\n                    <div\r\n                      css={css`\r\n                        font-size: 14px;\r\n                        color: ${COLORS.RED_DARKER};\r\n                      `}\r\n                    >\r\n                      {errors.changeUserID &&\r\n                        touched.changeUserID &&\r\n                        errors.changeUserID}\r\n                    </div>\r\n                  </label>\r\n\r\n                  <label htmlFor=\"changePasswordOld relative block\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"changePasswordOld\"\r\n                      placeholder=\"Enter your old password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.changePasswordOld}\r\n                      className=\"block w-full text-black py-2 px-4 box-border mt-4 rounded border border-gray-400 focus: outline-none\"\r\n                      css={\r\n                        errors.changePasswordOld &&\r\n                        touched.changePasswordOld &&\r\n                        errors.changePasswordOld &&\r\n                        css`\r\n                          border: 1px solid ${COLORS.RED};\r\n                        `\r\n                      }\r\n                    />\r\n                    <div\r\n                      css={css`\r\n                        font-size: 14px;\r\n                        color: ${COLORS.RED_DARKER};\r\n                      `}\r\n                    >\r\n                      {errors.changePasswordOld &&\r\n                        touched.changePasswordOld &&\r\n                        errors.changePasswordOld}\r\n                    </div>\r\n                  </label>\r\n                  <label htmlFor=\"changePasswordNew relative block\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"changePasswordNew\"\r\n                      placeholder=\"Enter your new password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.changePasswordNew}\r\n                      className=\"block w-full text-black py-2 px-4 box-border mt-4 rounded border border-gray-400 focus: outline-none\"\r\n                      css={\r\n                        errors.changePasswordNew &&\r\n                        touched.changePasswordNew &&\r\n                        errors.changePasswordNew &&\r\n                        css`\r\n                          border: 1px solid ${COLORS.RED};\r\n                        `\r\n                      }\r\n                    />\r\n                    <div\r\n                      css={css`\r\n                        font-size: 14px;\r\n                        color: ${COLORS.RED_DARKER};\r\n                      `}\r\n                    >\r\n                      {errors.changePasswordNew &&\r\n                        touched.changePasswordNew &&\r\n                        errors.changePasswordNew}\r\n                    </div>\r\n                  </label>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"block w-20 m-auto font-medium  bg-green-600 focus:outline-none py-2 px-4 uppercase rounded shadow-2xl text-white mt-4 hover:bg-gray-700\"\r\n                  >\r\n                    {isLoader ? <PulseLoader size=\"7\" color=\"#fff\" /> : \"Save\"}\r\n                  </button>\r\n                  <div\r\n                    className=\"inline-block float-right\"\r\n                    css={css`\r\n                      margin-top: 10px;\r\n                      & > button {\r\n                        font-weight: 600;\r\n                        font-size: 14px;\r\n                        padding-top: 4px;\r\n                        color: black;\r\n                        text-align: right;\r\n                        display: block;\r\n                        position: absolute;\r\n                        top: 0px;\r\n                        right: 20px;\r\n                        top: 10px;\r\n                      }\r\n                    `}\r\n                  >\r\n                    <div></div>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"focus:outline-none hover:text-green-900\"\r\n                      onClick={openChangePassModal}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTimes} />\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}