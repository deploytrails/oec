{"ast":null,"code":"import fetch from \"cross-fetch\";\nconst APIBaseUrl = \"http://15.206.245.247:8081/\";\nexport const getProfileData = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/ProfileServlet?employeeID=${employeId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getQualificationDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getDynamicQualification?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWorkExpDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getWorkExperience?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getBookPubDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getBookPublications?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getResearchGuidlines = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getResearchGuidance?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWorkshopDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getWorkShops?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getgrantsDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getGrantReceived?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getConferenceDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getConferenceDetails?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPhdDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getPhdDetails?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}; //update profile api's\n\nexport const updatePhdDetails = async employeId => {\n  const x = JSON.stringify({\n    researchTitle: x.researchTitle,\n    university: x.university,\n    registeredYear: x.registeredYear,\n    phdstatus: x.phdstatus,\n    dateAward,\n    supervisorName,\n    supervisionAff,\n    deptId,\n    phdDetailsId\n  });\n\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/insertPhdDetails?employeeID=${employeId}&insertData=${x}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/services/profileService.js"],"names":["fetch","APIBaseUrl","getProfileData","employeId","response","method","headers","data","json","error","console","log","getQualificationDetails","getWorkExpDetails","getBookPubDetails","getResearchGuidlines","getWorkshopDetails","getgrantsDetails","getConferenceDetails","getPhdDetails","updatePhdDetails","x","JSON","stringify","researchTitle","university","registeredYear","phdstatus","dateAward","supervisorName","supervisionAff","deptId","phdDetailsId"],"mappings":"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","sourcesContent":["import fetch from \"cross-fetch\";\r\nconst APIBaseUrl = \"http://15.206.245.247:8081/\";\r\nexport const getProfileData = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/ProfileServlet?employeeID=${employeId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getQualificationDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getDynamicQualification?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getWorkExpDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getWorkExperience?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getBookPubDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getBookPublications?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getResearchGuidlines = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getResearchGuidance?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getWorkshopDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getWorkShops?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getgrantsDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getGrantReceived?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getConferenceDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getConferenceDetails?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPhdDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getPhdDetails?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//update profile api's\r\n\r\nexport const updatePhdDetails = async (employeId) => {\r\n  const x = JSON.stringify({\r\n    researchTitle: x.researchTitle,\r\n    university: x.university,\r\n    registeredYear: x.registeredYear,\r\n    phdstatus: x.phdstatus,\r\n    dateAward,\r\n    supervisorName,\r\n    supervisionAff,\r\n    deptId,\r\n    phdDetailsId,\r\n  });\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/insertPhdDetails?employeeID=${employeId}&insertData=${x}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}