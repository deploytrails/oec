{"ast":null,"code":"import _css from \"@emotion/css\";\nvar _jsxFileName = \"D:\\\\ANJI_PROJECTS_FRONTEND\\\\eCampus\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { COLORS } from \"../constants\";\nimport { LoginService } from \"../services/loginService\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar _ref = false ? {\n  name: \"1s9o3u6-pages-Home\",\n  styles: \"margin-top:10px;& > p{font-weight:600;font-size:14px;padding-top:4px;color:white;text-align:right;};label:pages-Home;\"\n} : {\n  name: \"1s9o3u6-pages-Home\",\n  styles: \"margin-top:10px;& > p{font-weight:600;font-size:14px;padding-top:4px;color:white;text-align:right;};label:pages-Home;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref2 = false ? {\n  name: \"dkwyh4-pages-Home\",\n  styles: \"position:absolute;width:360px;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);;label:pages-Home;\"\n} : {\n  name: \"dkwyh4-pages-Home\",\n  styles: \"position:absolute;width:360px;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);;label:pages-Home;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref3 = false ? {\n  name: \"pa6oq7-pages-Home\",\n  styles: \"position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);;label:pages-Home;\"\n} : {\n  name: \"pa6oq7-pages-Home\",\n  styles: \"position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);;label:pages-Home;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref4 = false ? {\n  name: \"1jlq423-pages-Home\",\n  styles: \"background:#9053c7;background:-webkit-linear-gradient(-135deg,#c850c0,#4158d0);background:-o-linear-gradient(-135deg,#c850c0,#4158d0);background:-moz-linear-gradient(-135deg,#c850c0,#4158d0);background:linear-gradient(-135deg,#c850c0,#4158d0);;label:pages-Home;\"\n} : {\n  name: \"1jlq423-pages-Home\",\n  styles: \"background:#9053c7;background:-webkit-linear-gradient(-135deg,#c850c0,#4158d0);background:-o-linear-gradient(-135deg,#c850c0,#4158d0);background:-moz-linear-gradient(-135deg,#c850c0,#4158d0);background:linear-gradient(-135deg,#c850c0,#4158d0);;label:pages-Home;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nconst Home = () => {\n  const logoImage = \"http://54.87.169.150:8081/faculty/images/png.png\";\n  const router = useRouter();\n  const {\n    0: isLoginData,\n    1: setIsLoginData\n  } = useState({}); //YUP validation schema\n\n  const loginSchema = Yup.object().shape({\n    username: Yup.string().required(\"Required\"),\n    password: Yup.string().required(\"Required\"),\n    operation: Yup.string()\n  });\n\n  if ((isLoginData === null || isLoginData === void 0 ? void 0 : isLoginData.status) === \"loggedin\") {\n    router.push(\"/dashboard\");\n  }\n\n  console.log(\"isLoginData\", isLoginData);\n  return ___EmotionJSX(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(\"section\", {\n    className: \"h-screen block clearfix\",\n    css: _ref4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left h-screen bg-white relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"figure\", {\n    className: \"block m-auto\",\n    css: _ref3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"img\", {\n    src: logoImage,\n    alt: \"Annamachary Educational trust\",\n    title: \"Annamachary Educational trust\",\n    className: \"lazyload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }))), ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-right h-screen relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"div\", {\n    css: _ref2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"h3\", {\n    className: \"text-3xl font-bold font-sans text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Faculty Login\"), ___EmotionJSX(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      operation: \"login\"\n    },\n    validationSchema: loginSchema,\n    onSubmit: values => {\n      LoginService(values).then(data => {\n        setIsLoginData(data);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  }) => ___EmotionJSX(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"username relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    placeholder: \"Username\",\n    value: values.username,\n    className: \"block w-full text-black py-2 px-4 box-border mt-4 rounded shadow focus: outline-none\",\n    css: errors.username && touched.username && errors.username && /*#__PURE__*/_css(\"border:1px solid \", COLORS.RED, \";;label:pages-Home;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), ___EmotionJSX(\"div\", {\n    css: /*#__PURE__*/_css(\"position:absolute;right:10px;top:70px;font-size:14px;color:\", COLORS.RED_DARKER, \";;label:pages-Home;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, errors.username && touched.username && errors.username)), ___EmotionJSX(\"label\", {\n    htmlFor: \"password relative block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    className: \"block w-full text-black py-2 px-4 box-border mt-4 rounded shadow focus: outline-none\",\n    css: errors.password && touched.password && errors.password && /*#__PURE__*/_css(\"border:1px solid \", COLORS.RED, \";;label:pages-Home;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), ___EmotionJSX(\"div\", {\n    css: /*#__PURE__*/_css(\"position:absolute;right:10px;top:130px;font-size:14px;color:\", COLORS.RED_DARKER, \";;label:pages-Home;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, errors.password && touched.password && errors.password)), ___EmotionJSX(\"button\", {\n    type: \"submit\",\n    className: \"inline-block w-5/12 font-medium  bg-green-600 focus:outline-none py-3 px-4 uppercase rounded shadow-2xl text-white mt-4 hover:bg-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, \"Login\"), ___EmotionJSX(\"div\", {\n    className: \"inline-block float-right\",\n    css: _ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, \"Change Password ?\"), ___EmotionJSX(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, \"Forgot Password ?\"))))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/pages/index.js"],"names":["React","useState","useRouter","Formik","Yup","COLORS","LoginService","ClipLoader","Home","logoImage","router","isLoginData","setIsLoginData","loginSchema","object","shape","username","string","required","password","operation","status","push","console","log","values","then","data","errors","touched","handleChange","handleBlur","handleSubmit","RED","RED_DARKER"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport css from \"@emotion/css\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { COLORS } from \"../constants\";\r\nimport { LoginService } from \"../services/loginService\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Home = () => {\r\n  const logoImage = \"http://54.87.169.150:8081/faculty/images/png.png\";\r\n  const router = useRouter();\r\n  const [isLoginData, setIsLoginData] = useState({});\r\n\r\n  //YUP validation schema\r\n  const loginSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n    operation: Yup.string(),\r\n  });\r\n\r\n  if (isLoginData?.status === \"loggedin\") {\r\n    router.push(\"/dashboard\");\r\n  }\r\n  console.log(\"isLoginData\", isLoginData);\r\n  return (\r\n    <React.Fragment>\r\n      <section\r\n        className=\"h-screen block clearfix\"\r\n        css={css`\r\n          background: #9053c7;\r\n          background: -webkit-linear-gradient(-135deg, #c850c0, #4158d0);\r\n          background: -o-linear-gradient(-135deg, #c850c0, #4158d0);\r\n          background: -moz-linear-gradient(-135deg, #c850c0, #4158d0);\r\n          background: linear-gradient(-135deg, #c850c0, #4158d0);\r\n        `}\r\n      >\r\n        <div className=\"w-6/12 float-left h-screen bg-white relative\">\r\n          <figure\r\n            className=\"block m-auto\"\r\n            css={css`\r\n              position: absolute;\r\n              top: 50%;\r\n              left: 50%;\r\n              -webkit-transform: translate(-50%, -50%);\r\n              -moz-transform: translate(-50%, -50%);\r\n              -ms-transform: translate(-50%, -50%);\r\n              transform: translate(-50%, -50%);\r\n            `}\r\n          >\r\n            <img\r\n              src={logoImage}\r\n              alt=\"Annamachary Educational trust\"\r\n              title=\"Annamachary Educational trust\"\r\n              className=\"lazyload\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"w-6/12 float-right h-screen relative\">\r\n          <div\r\n            css={css`\r\n              position: absolute;\r\n              width: 360px;\r\n              top: 50%;\r\n              left: 50%;\r\n              -webkit-transform: translate(-50%, -50%);\r\n              -moz-transform: translate(-50%, -50%);\r\n              -ms-transform: translate(-50%, -50%);\r\n              transform: translate(-50%, -50%);\r\n            `}\r\n          >\r\n            <h3 className=\"text-3xl font-bold font-sans text-white\">\r\n              Faculty Login\r\n            </h3>\r\n            {/*Login Form Statrts */}\r\n            <Formik\r\n              initialValues={{\r\n                username: \"\",\r\n                password: \"\",\r\n                operation: \"login\",\r\n              }}\r\n              validationSchema={loginSchema}\r\n              onSubmit={(values) => {\r\n                LoginService(values).then((data) => {\r\n                  setIsLoginData(data);\r\n                });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <label htmlFor=\"username relative\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      placeholder=\"Username\"\r\n                      value={values.username}\r\n                      className=\"block w-full text-black py-2 px-4 box-border mt-4 rounded shadow focus: outline-none\"\r\n                      css={\r\n                        errors.username &&\r\n                        touched.username &&\r\n                        errors.username &&\r\n                        css`\r\n                          border: 1px solid ${COLORS.RED};\r\n                        `\r\n                      }\r\n                    />\r\n                    <div\r\n                      css={css`\r\n                        position: absolute;\r\n                        right: 10px;\r\n                        top: 70px;\r\n                        font-size: 14px;\r\n                        color: ${COLORS.RED_DARKER};\r\n                      `}\r\n                    >\r\n                      {errors.username && touched.username && errors.username}\r\n                    </div>\r\n                  </label>\r\n\r\n                  <label htmlFor=\"password relative block\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      className=\"block w-full text-black py-2 px-4 box-border mt-4 rounded shadow focus: outline-none\"\r\n                      css={\r\n                        errors.password &&\r\n                        touched.password &&\r\n                        errors.password &&\r\n                        css`\r\n                          border: 1px solid ${COLORS.RED};\r\n                        `\r\n                      }\r\n                    />\r\n                    <div\r\n                      css={css`\r\n                        position: absolute;\r\n                        right: 10px;\r\n                        top: 130px;\r\n                        font-size: 14px;\r\n                        color: ${COLORS.RED_DARKER};\r\n                      `}\r\n                    >\r\n                      {errors.password && touched.password && errors.password}\r\n                    </div>\r\n                  </label>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"inline-block w-5/12 font-medium  bg-green-600 focus:outline-none py-3 px-4 uppercase rounded shadow-2xl text-white mt-4 hover:bg-gray-700\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                  <div\r\n                    className=\"inline-block float-right\"\r\n                    css={css`\r\n                      margin-top: 10px;\r\n                      & > p {\r\n                        font-weight: 600;\r\n                        font-size: 14px;\r\n                        padding-top: 4px;\r\n                        color: white;\r\n                        text-align: right;\r\n                      }\r\n                    `}\r\n                  >\r\n                    <p>Change Password ?</p>\r\n                    <p>Forgot Password ?</p>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}