{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from \"cross-fetch\"; //const xx = \"https://cors-anywhere.herokuapp.com/\";\n\nvar APIBaseUrl = \"http://54.87.169.150:8081/\";\nexport var LoginService = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var username, password, operation, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = _ref.username, password = _ref.password, operation = _ref.operation;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"\".concat(APIBaseUrl, \"faculty/LoginServlet\"), {\n              method: \"POST\",\n              mode: \"no-cors\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Expose-Headers\": \"Access-Control-*\",\n                \"Access-Control-Allow-Headers\": \"Access-Control-*, Origin, X-Requested-With, Content-Type, Accept\",\n                \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS, HEAD\"\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password,\n                operation: operation\n              })\n            });\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n\n  return function LoginService(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n_c = LoginService;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginService\");","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/services/loginService.js"],"names":["fetch","APIBaseUrl","LoginService","username","password","operation","method","mode","headers","body","JSON","stringify","response","json","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,aAAlB,C,CACA;;AACA,IAAMC,UAAU,GAAG,4BAAnB;AACA,OAAO,IAAMC,YAAY;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,QAAT,QAASA,QAAT,EAAmBC,QAAnB,QAAmBA,QAAnB,EAA6BC,SAA7B,QAA6BA,SAA7B;AAAA;AAAA;AAAA,mBAEDL,KAAK,WAAIC,UAAJ,2BAAsC;AAChEK,cAAAA,MAAM,EAAE,MADwD;AAEhEC,cAAAA,IAAI,EAAE,SAF0D;AAGhEC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEP,iDAAiC,kBAF1B;AAGP,gDACE,kEAJK;AAKP,gDAAgC;AALzB,eAHuD;AAUhEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,gBAAAA,QAAQ,EAARA,QADmB;AAEnBC,gBAAAA,QAAQ,EAARA,QAFmB;AAGnBC,gBAAAA,SAAS,EAATA;AAHmB,eAAf;AAV0D,aAAtC,CAFJ;;AAAA;AAElBO,YAAAA,QAFkB;AAAA;AAAA,mBAkBLA,QAAQ,CAACC,IAAT,EAlBK;;AAAA;AAkBlBC,YAAAA,IAlBkB;AAAA,6CAoBjBA,IApBiB;;AAAA;AAAA;AAAA;AAsBxBC,YAAAA,OAAO,CAACC,GAAR;;AAtBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZd,YAAY;AAAA;AAAA;AAAA,GAAlB;KAAMA,Y","sourcesContent":["import fetch from \"cross-fetch\";\r\n//const xx = \"https://cors-anywhere.herokuapp.com/\";\r\nconst APIBaseUrl = \"http://54.87.169.150:8081/\";\r\nexport const LoginService = async ({ username, password, operation }) => {\r\n  try {\r\n    const response = await fetch(`${APIBaseUrl}faculty/LoginServlet`, {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Expose-Headers\": \"Access-Control-*\",\r\n        \"Access-Control-Allow-Headers\":\r\n          \"Access-Control-*, Origin, X-Requested-With, Content-Type, Accept\",\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS, HEAD\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n        operation,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}