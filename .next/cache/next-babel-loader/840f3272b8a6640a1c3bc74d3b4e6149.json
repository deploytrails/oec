{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from \"cross-fetch\";\nvar APIBaseUrl = \"http://15.206.245.247:8081/\";\nexport var LoginService = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var username, password, operation, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = _ref.username, password = _ref.password, operation = _ref.operation;\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(\"\".concat(APIBaseUrl, \"faculty/LoginServlet\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password,\n                operation: operation\n              })\n            });\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n\n  return function LoginService(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //change password\n\n_c = LoginService;\nexport var changePasswordService = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var changeUserID, changePasswordOld, changePasswordNew, confirmPasswordNew, operation, response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            changeUserID = _ref3.changeUserID, changePasswordOld = _ref3.changePasswordOld, changePasswordNew = _ref3.changePasswordNew, confirmPasswordNew = _ref3.confirmPasswordNew, operation = _ref3.operation;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return fetch(\"\".concat(APIBaseUrl, \"faculty/LoginServlet\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                changeUserID: changeUserID,\n                changePasswordOld: changePasswordOld,\n                changePasswordNew: changePasswordNew,\n                confirmPasswordNew: confirmPasswordNew,\n                operation: operation\n              })\n            });\n\n          case 4:\n            response = _context2.sent;\n            _context2.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 11]]);\n  }));\n\n  return function changePasswordService(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //forgot password\n\nexport var ResetPassword = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref5) {\n    var email, operation, response, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            email = _ref5.email, operation = _ref5.operation;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return fetch(\"\".concat(APIBaseUrl, \"faculty/LoginServlet\"), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email,\n                operation: operation\n              })\n            });\n\n          case 4:\n            response = _context3.sent;\n            _context3.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 11]]);\n  }));\n\n  return function ResetPassword(_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n_c2 = ResetPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginService\");\n$RefreshReg$(_c2, \"ResetPassword\");","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/OECFRONTEND/services/loginService.js"],"names":["fetch","APIBaseUrl","LoginService","username","password","operation","method","headers","body","JSON","stringify","response","json","data","console","log","changePasswordService","changeUserID","changePasswordOld","changePasswordNew","confirmPasswordNew","ResetPassword","email"],"mappings":"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","sourcesContent":["import fetch from \"cross-fetch\";\r\nconst APIBaseUrl = \"http://15.206.245.247:8081/\";\r\nexport const LoginService = async ({ username, password, operation }) => {\r\n  try {\r\n    const response = await fetch(`${APIBaseUrl}faculty/LoginServlet`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n        operation,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//change password\r\nexport const changePasswordService = async ({\r\n  changeUserID,\r\n  changePasswordOld,\r\n  changePasswordNew,\r\n  confirmPasswordNew,\r\n  operation,\r\n}) => {\r\n  try {\r\n    const response = await fetch(`${APIBaseUrl}faculty/LoginServlet`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        changeUserID,\r\n        changePasswordOld,\r\n        changePasswordNew,\r\n        confirmPasswordNew,\r\n        operation,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//forgot password\r\nexport const ResetPassword = async ({ email, operation }) => {\r\n  try {\r\n    const response = await fetch(`${APIBaseUrl}faculty/LoginServlet`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        operation,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}