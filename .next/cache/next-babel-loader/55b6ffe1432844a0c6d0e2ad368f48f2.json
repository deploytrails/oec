{"ast":null,"code":"import fetch from \"cross-fetch\";\nconst APIBaseUrl = \"http://15.206.245.247:8081/\";\nexport const getProfileData = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/ProfileServlet?employeeID=${employeId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getQualificationDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getDynamicQualification?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWorkExpDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getWorkExperience?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getBookPubDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getBookPublications?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getResearchGuidlines = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getResearchGuidance?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWorkshopDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getWorkShops?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getgrantsDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getGrantReceived?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getConferenceDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getConferenceDetails?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPhdDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getPhdDetails?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}; //update profile api's\n\nexport const updatePhdDetails = async (employeId, dataObj = JSON.stringify({\n  researchTitle: researchTitle,\n  university: university,\n  registeredYear: registeredYear,\n  phdstatus: phdstatus,\n  dateAward: dateAward,\n  supervisorName: supervisorName,\n  supervisionAff: supervisionAff,\n  deptId: deptId,\n  phdDetailsId: phdDetailsId\n})) => {\n  const params = Object.keys(dataObj).map(key => key + \":\" + dataObj[key]).join(\",\");\n  const encodeUI = encodeURIComponent(params);\n\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/insertPhdDetails?employeeID=${employeId}&insertData=${encodeUI}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/services/profileService.js"],"names":["fetch","APIBaseUrl","getProfileData","employeId","response","method","headers","data","json","error","console","log","getQualificationDetails","getWorkExpDetails","getBookPubDetails","getResearchGuidlines","getWorkshopDetails","getgrantsDetails","getConferenceDetails","getPhdDetails","updatePhdDetails","dataObj","JSON","stringify","researchTitle","university","registeredYear","phdstatus","dateAward","supervisorName","supervisionAff","deptId","phdDetailsId","params","Object","keys","map","key","join","encodeUI","encodeURIComponent"],"mappings":"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","sourcesContent":["import fetch from \"cross-fetch\";\r\nconst APIBaseUrl = \"http://15.206.245.247:8081/\";\r\nexport const getProfileData = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/ProfileServlet?employeeID=${employeId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getQualificationDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getDynamicQualification?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getWorkExpDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getWorkExperience?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getBookPubDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getBookPublications?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getResearchGuidlines = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getResearchGuidance?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getWorkshopDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getWorkShops?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getgrantsDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getGrantReceived?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getConferenceDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getConferenceDetails?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPhdDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getPhdDetails?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//update profile api's\r\n\r\nexport const updatePhdDetails = async (\r\n  employeId,\r\n  dataObj = JSON.stringify({\r\n    researchTitle: researchTitle,\r\n    university: university,\r\n    registeredYear: registeredYear,\r\n    phdstatus: phdstatus,\r\n    dateAward: dateAward,\r\n    supervisorName: supervisorName,\r\n    supervisionAff: supervisionAff,\r\n    deptId: deptId,\r\n    phdDetailsId: phdDetailsId,\r\n  })\r\n) => {\r\n  const params = Object.keys(dataObj)\r\n    .map((key) => key + \":\" + dataObj[key])\r\n    .join(\",\");\r\n  const encodeUI = encodeURIComponent(params);\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/insertPhdDetails?employeeID=${employeId}&insertData=${encodeUI}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}