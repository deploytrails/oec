{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport fetch from \"cross-fetch\";\nvar xx = \"https://cors-anywhere.herokuapp.com/\";\nvar APIBaseUrl = \"http://54.87.169.150:8081/\";\nexport var LoginService = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, password, operation) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"\".concat(xx).concat(APIBaseUrl, \"faculty/LoginServlet\"), {\n              method: \"POST\",\n              //mode: \"no-cors\",\n              headers: {\n                \"Content-Type\": \"application/json\" // \"X-Requested-With\": \"XMLHttpRequest\",\n                // \"Content-Type\": \"application/json\",\n                // Accept: \"application/json\",\n                // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n                // \"Access-Control-Allow-Credentials\": \"true\",\n\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password,\n                operation: operation\n              })\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function LoginService(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n_c = LoginService;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginService\");","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/services/loginService.js"],"names":["fetch","xx","APIBaseUrl","LoginService","username","password","operation","method","headers","body","JSON","stringify","response","json","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,IAAMC,EAAE,GAAG,sCAAX;AACA,IAAMC,UAAU,GAAG,4BAAnB;AACA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,QAAP,EAAiBC,QAAjB,EAA2BC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEDN,KAAK,WAAIC,EAAJ,SAASC,UAAT,2BAA2C;AACrEK,cAAAA,MAAM,EAAE,MAD6D;AAErE;AACAC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT,CAEP;AACA;AACA;AACA;AACA;;AANO,eAH4D;AAWrEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,gBAAAA,QAAQ,EAARA,QADmB;AAEnBC,gBAAAA,QAAQ,EAARA,QAFmB;AAGnBC,gBAAAA,SAAS,EAATA;AAHmB,eAAf;AAX+D,aAA3C,CAFJ;;AAAA;AAElBM,YAAAA,QAFkB;AAAA;AAAA,mBAmBLA,QAAQ,CAACC,IAAT,EAnBK;;AAAA;AAmBlBC,YAAAA,IAnBkB;AAAA,6CAoBjBA,IApBiB;;AAAA;AAAA;AAAA;AAsBxBC,YAAAA,OAAO,CAACC,GAAR;;AAtBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZb,YAAY;AAAA;AAAA;AAAA,GAAlB;KAAMA,Y","sourcesContent":["import fetch from \"cross-fetch\";\r\nconst xx = \"https://cors-anywhere.herokuapp.com/\";\r\nconst APIBaseUrl = \"http://54.87.169.150:8081/\";\r\nexport const LoginService = async (username, password, operation) => {\r\n  try {\r\n    const response = await fetch(`${xx}${APIBaseUrl}faculty/LoginServlet`, {\r\n      method: \"POST\",\r\n      //mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // \"X-Requested-With\": \"XMLHttpRequest\",\r\n        // \"Content-Type\": \"application/json\",\r\n        // Accept: \"application/json\",\r\n        // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n        // \"Access-Control-Allow-Credentials\": \"true\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n        operation,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}