{"ast":null,"code":"import _css from \"@emotion/css\";\nvar _jsxFileName = \"D:\\\\ANJI_PROJECTS_FRONTEND\\\\eCampus\\\\components\\\\profile\\\\profile-modals\\\\conferenceModal.js\";\nvar __jsx = React.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Cookies from \"js-cookie\";\nimport { useSnackbar } from \"react-simple-snackbar\";\nimport * as STYLES from \"../../../components/General/modalStyles\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar _ref = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref2 = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref3 = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref4 = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref5 = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref6 = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref7 = false ? {\n  name: \"1s4fvif-profile-modals-ConferenceModal\",\n  styles: \"height:42px;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"1s4fvif-profile-modals-ConferenceModal\",\n  styles: \"height:42px;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref8 = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref9 = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref10 = false ? {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\"\n} : {\n  name: \"na9492-profile-modals-ConferenceModal\",\n  styles: \"border:1px solid red;;label:profile-modals-ConferenceModal;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nconst ConferenceModal = ({\n  openModal,\n  confData\n}) => {\n  var _confData$departmentI;\n\n  console.log(\"confData\", confData);\n  const ProfileId = Cookies.get(\"employeeID\");\n  const [openSnackbar, closeSnackbar] = useSnackbar(); //YUP validation schema\n\n  const confUpdateSchema = Yup.object().shape({\n    typeOfconferencename: Yup.string().required(\"Required\"),\n    titleConference: Yup.string().required(\"Required\"),\n    conferencetype: Yup.string().required(\"Required\"),\n    organize: Yup.string().required(\"Required\"),\n    confmonthYear: Yup.string().required(\"Required\"),\n    issntype: Yup.string().required(\"Required\"),\n    issnIsbnNo: Yup.string().required(\"Required\"),\n    issuetype: Yup.string().required(\"Required\"),\n    issueNo: Yup.string().required(\"Required\"),\n    deptId: Yup.string().required(\"Required\"),\n    conferenceID: Yup.string().required(\"Required\")\n  });\n  const confernceName = [\"Choose your conference\", \"Conference\", \"Seminar\"];\n  return ___EmotionJSX(STYLES.PopupMask, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(STYLES.PopupWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(STYLES.PopupTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Conference Details\"), ___EmotionJSX(Formik, {\n    initialValues: {\n      typeOfconferencename: confData === null || confData === void 0 ? void 0 : confData.typeOfconferencename,\n      titleConference: confData === null || confData === void 0 ? void 0 : confData.titleConference,\n      conferencetype: confData === null || confData === void 0 ? void 0 : confData.internationalNational,\n      organize: confData === null || confData === void 0 ? void 0 : confData.organizedBy,\n      confmonthYear: confData === null || confData === void 0 ? void 0 : confData.conferenceMonthYear,\n      issntype: confData === null || confData === void 0 ? void 0 : confData.typeOfIssn,\n      issnIsbnNo: confData === null || confData === void 0 ? void 0 : confData.issnIsbnNo,\n      issuetype: confData === null || confData === void 0 ? void 0 : confData.typeOfissue,\n      issueNo: confData === null || confData === void 0 ? void 0 : confData.typeOfIssn,\n      deptId: confData === null || confData === void 0 ? void 0 : (_confData$departmentI = confData.departmentId) === null || _confData$departmentI === void 0 ? void 0 : _confData$departmentI.departmentPrimaryId,\n      conferenceID: confData === null || confData === void 0 ? void 0 : confData.conferenceID\n    },\n    validationSchema: confUpdateSchema,\n    onSubmit: values => {\n      console.log(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  }) => ___EmotionJSX(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"clearfix mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"typeOfconferencename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, \"Name of the Conference/Seminars\", ___EmotionJSX(\"select\", {\n    id: \"typeOfconferencename\",\n    name: \"typeOfconferencename\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.typeOfconferencename,\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none\",\n    css: errors.typeOfconferencename && touched.typeOfconferencename && errors.typeOfconferencename && _ref10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, \"Choose Conference\"), ___EmotionJSX(\"option\", {\n    value: \"National Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }, \"National Conference\"), ___EmotionJSX(\"option\", {\n    value: \"International Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, \"International Conference\")))), ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Title Of The Paper\", ___EmotionJSX(\"label\", {\n    htmlFor: \"titleConference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(\"input\", {\n    type: \"text\",\n    id: \"titleConference\",\n    name: \"titleConference\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.titleConference,\n    placeholder: \"Title Of The Paper\",\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none \",\n    css: errors.titleConference && touched.titleConference && errors.titleConference && _ref9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })))), ___EmotionJSX(\"div\", {\n    className: \"clearfix mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"conferencetype\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, \"Category Of Conference\", ___EmotionJSX(\"select\", {\n    name: \"conferencetype\",\n    id: \"conferencetype\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.conferencetype,\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none\",\n    css: errors.conferencetype && touched.conferencetype && errors.conferencetype && _ref8,\n    css: _ref7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, \"Choose Conference\"), ___EmotionJSX(\"option\", {\n    value: \"National Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, \"National Conference\"), ___EmotionJSX(\"option\", {\n    value: \"International Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, \"International Conference\")))), ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"organize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, \"Organized By\", ___EmotionJSX(\"input\", {\n    type: \"text\",\n    id: \"organize\",\n    name: \"organize\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.organize,\n    placeholder: \"Organized By\",\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none \",\n    css: errors.organize && touched.organize && errors.organize && _ref6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  })))), ___EmotionJSX(\"div\", {\n    className: \"clearfix mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"confmonthYear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, \"Month & Year\", ___EmotionJSX(\"input\", {\n    type: \"date\",\n    name: \"confmonthYear\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.confmonthYear,\n    placeholder: \"Month & Year\",\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none \",\n    css: errors.confmonthYear && touched.confmonthYear && errors.confmonthYear && _ref5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }))), ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"issntype\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, \"ISSN/ISBN Number\", ___EmotionJSX(\"select\", {\n    name: \"issntype\",\n    id: \"issntype\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.issntype,\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none\",\n    css: errors.issntype && touched.issntype && errors.issntype && _ref4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 23\n    }\n  }, \"Choose your option\"), ___EmotionJSX(\"option\", {\n    value: \"National Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, \"ISSN\"), ___EmotionJSX(\"option\", {\n    value: \"International Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 23\n    }\n  }, \"ISBN\"))))), ___EmotionJSX(\"div\", {\n    className: \"clearfix mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"issnIsbnNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, \"issnIsbnNo\", ___EmotionJSX(\"input\", {\n    type: \"text\",\n    name: \"issnIsbnNo\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.issnIsbnNo,\n    placeholder: \"Type of ISSN\",\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none\",\n    css: errors.issnIsbnNo && touched.issnIsbnNo && errors.issnIsbnNo && _ref3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }))), ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"issuetype\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, \"Issue No\", ___EmotionJSX(\"select\", {\n    name: \"issuetype\",\n    id: \"issuetype\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.issuetype,\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none\",\n    css: errors.issuetype && touched.issuetype && errors.issuetype && _ref2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }, \"Choose your option\"), ___EmotionJSX(\"option\", {\n    value: \"National Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }, \"SCOPUS\"), ___EmotionJSX(\"option\", {\n    value: \"International Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 23\n    }\n  }, \"Wos\"), ___EmotionJSX(\"option\", {\n    value: \"International Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }\n  }, \"Wos\"), ___EmotionJSX(\"option\", {\n    value: \"International Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 23\n    }\n  }, \"ICI\"), ___EmotionJSX(\"option\", {\n    value: \"International Conference\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 23\n    }\n  }, \"UGC\"))))), ___EmotionJSX(\"div\", {\n    className: \"clearfix mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"w-Full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"label\", {\n    htmlFor: \"issueNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, \"Type Of issue\", ___EmotionJSX(\"input\", {\n    type: \"text\",\n    name: \"issueNo\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.issueNo,\n    placeholder: \" Issue No\",\n    className: \"border border-2 border-solid p-2 rounded w-full focus:outline-none\",\n    css: errors.issueNo && touched.issueNo && errors.issueNo && _ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  })))), ___EmotionJSX(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"button\", {\n    type: \"submit\",\n    className: \"bg-green-400 px-3 py-2 rounded text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, \"Save Conference Details\"), ___EmotionJSX(\"button\", {\n    type: \"button\",\n    onClick: openModal,\n    className: \"bg-black px-3 py-2 ml-2 rounded text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, \"Close\"))))));\n};\n\nexport default ConferenceModal;","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/components/profile/profile-modals/conferenceModal.js"],"names":["React","useState","useEffect","Formik","Yup","Cookies","useSnackbar","STYLES","ConferenceModal","openModal","confData","console","log","ProfileId","get","openSnackbar","closeSnackbar","confUpdateSchema","object","shape","typeOfconferencename","string","required","titleConference","conferencetype","organize","confmonthYear","issntype","issnIsbnNo","issuetype","issueNo","deptId","conferenceID","confernceName","internationalNational","organizedBy","conferenceMonthYear","typeOfIssn","typeOfissue","departmentId","departmentPrimaryId","values","value","errors","touched","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport css from \"@emotion/css\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useSnackbar } from \"react-simple-snackbar\";\r\nimport * as STYLES from \"../../../components/General/modalStyles\";\r\n\r\nconst ConferenceModal = ({ openModal, confData }) => {\r\n  console.log(\"confData\", confData);\r\n  const ProfileId = Cookies.get(\"employeeID\");\r\n  const [openSnackbar, closeSnackbar] = useSnackbar();\r\n\r\n  //YUP validation schema\r\n  const confUpdateSchema = Yup.object().shape({\r\n    typeOfconferencename: Yup.string().required(\"Required\"),\r\n    titleConference: Yup.string().required(\"Required\"),\r\n    conferencetype: Yup.string().required(\"Required\"),\r\n    organize: Yup.string().required(\"Required\"),\r\n    confmonthYear: Yup.string().required(\"Required\"),\r\n    issntype: Yup.string().required(\"Required\"),\r\n    issnIsbnNo: Yup.string().required(\"Required\"),\r\n    issuetype: Yup.string().required(\"Required\"),\r\n    issueNo: Yup.string().required(\"Required\"),\r\n    deptId: Yup.string().required(\"Required\"),\r\n    conferenceID: Yup.string().required(\"Required\"),\r\n  });\r\n\r\n  const confernceName = [\"Choose your conference\", \"Conference\", \"Seminar\"];\r\n  return (\r\n    <STYLES.PopupMask>\r\n      <STYLES.PopupWrapper>\r\n        <STYLES.PopupTitle>Conference Details</STYLES.PopupTitle>\r\n        <Formik\r\n          initialValues={{\r\n            typeOfconferencename: confData?.typeOfconferencename,\r\n            titleConference: confData?.titleConference,\r\n            conferencetype: confData?.internationalNational,\r\n            organize: confData?.organizedBy,\r\n            confmonthYear: confData?.conferenceMonthYear,\r\n            issntype: confData?.typeOfIssn,\r\n            issnIsbnNo: confData?.issnIsbnNo,\r\n            issuetype: confData?.typeOfissue,\r\n            issueNo: confData?.typeOfIssn,\r\n            deptId: confData?.departmentId?.departmentPrimaryId,\r\n            conferenceID: confData?.conferenceID,\r\n          }}\r\n          validationSchema={confUpdateSchema}\r\n          onSubmit={(values) => {\r\n            console.log(value);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n          }) => (\r\n            <form>\r\n              <div className=\"clearfix mb-3\">\r\n                <div className=\"w-6/12 float-left pr-2\">\r\n                  <label htmlFor=\"typeOfconferencename\">\r\n                    Name of the Conference/Seminars\r\n                    <select\r\n                      id=\"typeOfconferencename\"\r\n                      name=\"typeOfconferencename\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.typeOfconferencename}\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none\"\r\n                      css={\r\n                        errors.typeOfconferencename &&\r\n                        touched.typeOfconferencename &&\r\n                        errors.typeOfconferencename &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                    >\r\n                      <option>Choose Conference</option>\r\n                      <option value=\"National Conference\">\r\n                        National Conference\r\n                      </option>\r\n                      <option value=\"International Conference\">\r\n                        International Conference\r\n                      </option>\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n                <div className=\"w-6/12 float-left\">\r\n                  Title Of The Paper\r\n                  <label htmlFor=\"titleConference\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"titleConference\"\r\n                      name=\"titleConference\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.titleConference}\r\n                      placeholder=\"Title Of The Paper\"\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none \"\r\n                      css={\r\n                        errors.titleConference &&\r\n                        touched.titleConference &&\r\n                        errors.titleConference &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"clearfix mb-3\">\r\n                <div className=\"w-6/12 float-left pr-2\">\r\n                  <label htmlFor=\"conferencetype\">\r\n                    Category Of Conference\r\n                    <select\r\n                      name=\"conferencetype\"\r\n                      id=\"conferencetype\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.conferencetype}\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none\"\r\n                      css={\r\n                        errors.conferencetype &&\r\n                        touched.conferencetype &&\r\n                        errors.conferencetype &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                      css={css`\r\n                        height: 42px;\r\n                      `}\r\n                    >\r\n                      <option>Choose Conference</option>\r\n                      <option value=\"National Conference\">\r\n                        National Conference\r\n                      </option>\r\n                      <option value=\"International Conference\">\r\n                        International Conference\r\n                      </option>\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n                <div className=\"w-6/12 float-left \">\r\n                  <label htmlFor=\"organize\">\r\n                    Organized By\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"organize\"\r\n                      name=\"organize\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.organize}\r\n                      placeholder=\"Organized By\"\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none \"\r\n                      css={\r\n                        errors.organize &&\r\n                        touched.organize &&\r\n                        errors.organize &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"clearfix mb-3\">\r\n                <div className=\"w-6/12 float-left pr-2\">\r\n                  <label htmlFor=\"confmonthYear\">\r\n                    Month & Year\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"confmonthYear\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.confmonthYear}\r\n                      placeholder=\"Month & Year\"\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none \"\r\n                      css={\r\n                        errors.confmonthYear &&\r\n                        touched.confmonthYear &&\r\n                        errors.confmonthYear &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                    />\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"w-6/12 float-left\">\r\n                  <label htmlFor=\"issntype\">\r\n                    ISSN/ISBN Number\r\n                    <select\r\n                      name=\"issntype\"\r\n                      id=\"issntype\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.issntype}\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none\"\r\n                      css={\r\n                        errors.issntype &&\r\n                        touched.issntype &&\r\n                        errors.issntype &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                    >\r\n                      <option>Choose your option</option>\r\n                      <option value=\"National Conference\">ISSN</option>\r\n                      <option value=\"International Conference\">ISBN</option>\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"clearfix mb-3\">\r\n                <div className=\"w-6/12 float-left pr-2\">\r\n                  <label htmlFor=\"issnIsbnNo\">\r\n                    issnIsbnNo\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"issnIsbnNo\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.issnIsbnNo}\r\n                      placeholder=\"Type of ISSN\"\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none\"\r\n                      css={\r\n                        errors.issnIsbnNo &&\r\n                        touched.issnIsbnNo &&\r\n                        errors.issnIsbnNo &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                    />\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"w-6/12 float-left\">\r\n                  <label htmlFor=\"issuetype\">\r\n                    Issue No\r\n                    <select\r\n                      name=\"issuetype\"\r\n                      id=\"issuetype\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.issuetype}\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none\"\r\n                      css={\r\n                        errors.issuetype &&\r\n                        touched.issuetype &&\r\n                        errors.issuetype &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                    >\r\n                      <option>Choose your option</option>\r\n                      <option value=\"National Conference\">SCOPUS</option>\r\n                      <option value=\"International Conference\">Wos</option>\r\n                      <option value=\"International Conference\">Wos</option>\r\n                      <option value=\"International Conference\">ICI</option>\r\n                      <option value=\"International Conference\">UGC</option>\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"clearfix mb-3\">\r\n                <div className=\"w-Full\">\r\n                  <label htmlFor=\"issueNo\">\r\n                    Type Of issue\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"issueNo\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.issueNo}\r\n                      placeholder=\" Issue No\"\r\n                      className=\"border border-2 border-solid p-2 rounded w-full focus:outline-none\"\r\n                      css={\r\n                        errors.issueNo &&\r\n                        touched.issueNo &&\r\n                        errors.issueNo &&\r\n                        css`\r\n                          border: 1px solid red;\r\n                        `\r\n                      }\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"float-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-green-400 px-3 py-2 rounded text-white\"\r\n                >\r\n                  Save Conference Details\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={openModal}\r\n                  className=\"bg-black px-3 py-2 ml-2 rounded text-white\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </STYLES.PopupWrapper>\r\n    </STYLES.PopupMask>\r\n  );\r\n};\r\nexport default ConferenceModal;\r\n"]},"metadata":{},"sourceType":"module"}