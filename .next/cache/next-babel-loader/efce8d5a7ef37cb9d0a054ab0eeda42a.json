{"ast":null,"code":"import fetch from \"cross-fetch\";\nconst APIBaseUrl = \"http://15.206.245.247:8081/\";\nexport const getProfileData = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/ProfileServlet?employeeID=${employeId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getQualificationDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getDynamicQualification?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWorkExpDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getWorkExperience?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getBookPubDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getBookPublications?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getResearchGuidlines = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getResearchGuidance?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWorkshopDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getWorkShops?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getgrantsDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getGrantReceived?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getConferenceDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getConferenceDetails?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPhdDetails = async employeId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/getPhdDetails?employeeID=${employeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}; //update profile api's\n\nexport const updatePhdDetails = async (employeId, dataObj = {\n  researchTitle: researchTitle,\n  university: university,\n  registeredYear: registeredYear,\n  phdstatus: phdstatus,\n  dateAward: dateAward,\n  supervisorName: supervisorName,\n  supervisionAff: supervisionAff,\n  depart: depart,\n  phdDetailsId: phdDetailsId\n}) => {\n  const enc = encodeURIComponent(JSON.stringify(dataObj));\n\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/insertPhdDetails?employeeID=${employeId}&insertData=${enc}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePhdDetails = async phdDetailsId => {\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/deletePhdDetails?phdDetailsID=${phdDetailsId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}; //update conference\n\nexport const updateConfDetails = async (employeId, dataObj = {\n  typeOfconferencename: typeOfconferencename,\n  titleConference: titleConference,\n  internationalNational: internationalNational,\n  organizedBy: organizedBy,\n  confMonYear: confMonYear,\n  typeOfIssn: typeOfIssn,\n  issnIsbnNo: issnIsbnNo,\n  typeOfissue: typeOfissue,\n  issueNo: issueNo,\n  deptId: deptId,\n  conferenceID: conferenceID\n}) => {\n  const enc = encodeURIComponent(JSON.stringify(dataObj));\n\n  try {\n    const response = await fetch(`${APIBaseUrl}faculty/insertConferenceDetails?employeeID=${employeId}&insertData=${enc}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/services/profileService.js"],"names":["fetch","APIBaseUrl","getProfileData","employeId","response","method","headers","data","json","error","console","log","getQualificationDetails","getWorkExpDetails","getBookPubDetails","getResearchGuidlines","getWorkshopDetails","getgrantsDetails","getConferenceDetails","getPhdDetails","updatePhdDetails","dataObj","researchTitle","university","registeredYear","phdstatus","dateAward","supervisorName","supervisionAff","depart","phdDetailsId","enc","encodeURIComponent","JSON","stringify","deletePhdDetails","updateConfDetails","typeOfconferencename","titleConference","internationalNational","organizedBy","confMonYear","typeOfIssn","issnIsbnNo","typeOfissue","issueNo","deptId","conferenceID"],"mappings":"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","sourcesContent":["import fetch from \"cross-fetch\";\r\nconst APIBaseUrl = \"http://15.206.245.247:8081/\";\r\nexport const getProfileData = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/ProfileServlet?employeeID=${employeId}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getQualificationDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getDynamicQualification?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getWorkExpDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getWorkExperience?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getBookPubDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getBookPublications?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getResearchGuidlines = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getResearchGuidance?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getWorkshopDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getWorkShops?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getgrantsDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getGrantReceived?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getConferenceDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getConferenceDetails?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPhdDetails = async (employeId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/getPhdDetails?employeeID=${employeId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//update profile api's\r\n\r\nexport const updatePhdDetails = async (\r\n  employeId,\r\n  dataObj = {\r\n    researchTitle: researchTitle,\r\n    university: university,\r\n    registeredYear: registeredYear,\r\n    phdstatus: phdstatus,\r\n    dateAward: dateAward,\r\n    supervisorName: supervisorName,\r\n    supervisionAff: supervisionAff,\r\n    depart: depart,\r\n    phdDetailsId: phdDetailsId,\r\n  }\r\n) => {\r\n  const enc = encodeURIComponent(JSON.stringify(dataObj));\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/insertPhdDetails?employeeID=${employeId}&insertData=${enc}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePhdDetails = async (phdDetailsId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/deletePhdDetails?phdDetailsID=${phdDetailsId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//update conference\r\nexport const updateConfDetails = async (\r\n  employeId,\r\n  dataObj = {\r\n    typeOfconferencename: typeOfconferencename,\r\n    titleConference: titleConference,\r\n    internationalNational: internationalNational,\r\n    organizedBy: organizedBy,\r\n    confMonYear: confMonYear,\r\n    typeOfIssn: typeOfIssn,\r\n    issnIsbnNo: issnIsbnNo,\r\n    typeOfissue: typeOfissue,\r\n    issueNo: issueNo,\r\n    deptId: deptId,\r\n    conferenceID: conferenceID,\r\n  }\r\n) => {\r\n  const enc = encodeURIComponent(JSON.stringify(dataObj));\r\n  try {\r\n    const response = await fetch(\r\n      `${APIBaseUrl}faculty/insertConferenceDetails?employeeID=${employeId}&insertData=${enc}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}