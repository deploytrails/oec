{"ast":null,"code":"var _jsxFileName = \"D:\\\\ANJI_PROJECTS_FRONTEND\\\\eCampus\\\\components\\\\sidenav\\\\sideNavLinks.js\";\nvar __jsx = React.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { COLORS } from \"../../constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faColumns, faFileImport, faNotesMedical, faBook, faBell, faUser, faList, faIdBadge, faCalendar, faKeyboard, faChartBar, faPhone, faTint, faChevronCircleRight, faArrowRight, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar _ref = false ? {\n  name: \"1514boa-sidenav-SideNavLinks\",\n  styles: \"transform:rotate(90deg);transition:all 0.3s ease-in-out;;label:sidenav-SideNavLinks;\"\n} : {\n  name: \"1514boa-sidenav-SideNavLinks\",\n  styles: \"transform:rotate(90deg);transition:all 0.3s ease-in-out;;label:sidenav-SideNavLinks;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref2 = false ? {\n  name: \"1514boa-sidenav-SideNavLinks\",\n  styles: \"transform:rotate(90deg);transition:all 0.3s ease-in-out;;label:sidenav-SideNavLinks;\"\n} : {\n  name: \"1514boa-sidenav-SideNavLinks\",\n  styles: \"transform:rotate(90deg);transition:all 0.3s ease-in-out;;label:sidenav-SideNavLinks;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nconst SideNavLinks = () => {\n  const router = useRouter();\n  const {\n    0: dropMenu,\n    1: setDropMenu\n  } = useState(false);\n\n  const toggleAlloCourceMenu = () => {\n    setDropMenu(!dropMenu);\n  };\n\n  return ___EmotionJSX(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(\"ul\", {\n    css: /*#__PURE__*/css(\"height:calc(100% - 190px);overflow-y:auto;overflow-x:hidden;padding:10px 40px 10px 40px;color:\", COLORS.TEXTGRAY, \";& > li > a{padding:8px 0px;display:block;border-bottom:1px solid \", COLORS.DARKBORDER, \";font-size:13px;&:hover{color:\", COLORS.WHITE, \";}};label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/dashboard\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), \" Dashboard\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/imports\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/imports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faFileImport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), \" Imports\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/notifications\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faBell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }), \" Notifications\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/profile\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), \" Profile\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/allocated-coureces\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"clearfix\",\n    onClick: toggleAlloCourceMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), \" Allocated Courses\", ___EmotionJSX(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faChevronRight,\n    css: dropMenu ? _ref : _ref2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }))), dropMenu && ___EmotionJSX(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Menu 1\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/cource-coordinator-allocation\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/cource-coordinator-allocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faIdBadge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }), \" Cource Coordinator Allocation\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/class-schedule\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/class-schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faCalendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }), \" Class Schedule\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/mentoring\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/mentoring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faKeyboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }), \" Mentoring\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/exam-schedule\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/exam-schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faCalendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }), \" Exam Schedule\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/reports\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/reports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faChartBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }), \" Reports\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/query-form\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/query-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faPhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }), \" Query Form\"))), ___EmotionJSX(\"li\", {\n    css: router.pathname === \"/skins\" ? /*#__PURE__*/css(\"color:\", COLORS.WHITE, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")) : /*#__PURE__*/css(\"color:\", COLORS.TEXTGRAY, \";;label:sidenav-SideNavLinks;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/skins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(FontAwesomeIcon, {\n    icon: faTint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }), \" Skins\")))));\n};\n\nexport default SideNavLinks;","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/components/sidenav/sideNavLinks.js"],"names":["React","useState","css","Link","useRouter","COLORS","FontAwesomeIcon","faColumns","faFileImport","faNotesMedical","faBook","faBell","faUser","faList","faIdBadge","faCalendar","faKeyboard","faChartBar","faPhone","faTint","faChevronCircleRight","faArrowRight","faChevronRight","SideNavLinks","router","dropMenu","setDropMenu","toggleAlloCourceMenu","TEXTGRAY","DARKBORDER","WHITE","pathname"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,MAPF,EAQEC,SARF,EASEC,UATF,EAUEC,UAVF,EAWEC,UAXF,EAYEC,OAZF,EAaEC,MAbF,EAcEC,oBAdF,EAeEC,YAfF,EAgBEC,cAhBF,QAiBO,mCAjBP;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGpB,SAAS,EAAxB;AACA,QAAM;AAAA,OAACqB,QAAD;AAAA,OAAWC;AAAX,MAA0BzB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAM0B,oBAAoB,GAAG,MAAM;AACjCD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,SACE,cAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,eAAEvB,GAAF,mGAKQG,MAAM,CAACuB,QALf,wEAU4BvB,MAAM,CAACwB,UAVnC,oCAaYxB,MAAM,CAACyB,KAbnB,23VADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBE;AACE,IAAA,GAAG,EACDN,MAAM,CAACO,QAAP,KAAoB,YAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAErB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eADF,CAXF,CAnBF,EAqCE;AACE,IAAA,GAAG,EACDiB,MAAM,CAACO,QAAP,KAAoB,UAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEpB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,aADF,CAXF,CArCF,EAuDE;AACE,IAAA,GAAG,EACDgB,MAAM,CAACO,QAAP,KAAoB,gBAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEjB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mBADF,CAXF,CAvDF,EAyEE;AACE,IAAA,GAAG,EACDa,MAAM,CAACO,QAAP,KAAoB,UAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEhB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,aADF,CAXF,CAzEF,EA2FE;AACE,IAAA,GAAG,EACDY,MAAM,CAACO,QAAP,KAAoB,qBAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAED,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEd,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,wBAEE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AACE,IAAA,IAAI,EAAES,cADR;AAEE,IAAA,GAAG,EACDG,QAAQ,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAXF,EA8BGA,QAAQ,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA/BJ,CA3FF,EAgIE;AACE,IAAA,GAAG,EACDD,MAAM,CAACO,QAAP,KAAoB,gCAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEd,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mCADF,CAXF,CAhIF,EAkJE;AACE,IAAA,GAAG,EACDU,MAAM,CAACO,QAAP,KAAoB,iBAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oBADF,CAXF,CAlJF,EAoKE;AACE,IAAA,GAAG,EACDS,MAAM,CAACO,QAAP,KAAoB,YAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEZ,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eADF,CAXF,CApKF,EAsLE;AACE,IAAA,GAAG,EACDQ,MAAM,CAACO,QAAP,KAAoB,gBAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mBADF,CAXF,CAtLF,EAwME;AACE,IAAA,GAAG,EACDS,MAAM,CAACO,QAAP,KAAoB,UAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEX,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,aADF,CAXF,CAxMF,EA0NE;AACE,IAAA,GAAG,EACDO,MAAM,CAACO,QAAP,KAAoB,aAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBADF,CAXF,CA1NF,EA4OE;AACE,IAAA,GAAG,EACDM,MAAM,CAACO,QAAP,KAAoB,QAApB,gBACI7B,GADJ,WAEeG,MAAM,CAACyB,KAFtB,y4VAII5B,GAJJ,WAKeG,MAAM,CAACuB,QALtB,y3VAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,eAAD;AAAiB,IAAA,IAAI,EAAET,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,WADF,CAXF,CA5OF,CADF,CADF;AAkQD,CA1QD;;AA4QA,eAAeI,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport { COLORS } from \"../../constants\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faColumns,\r\n  faFileImport,\r\n  faNotesMedical,\r\n  faBook,\r\n  faBell,\r\n  faUser,\r\n  faList,\r\n  faIdBadge,\r\n  faCalendar,\r\n  faKeyboard,\r\n  faChartBar,\r\n  faPhone,\r\n  faTint,\r\n  faChevronCircleRight,\r\n  faArrowRight,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SideNavLinks = () => {\r\n  const router = useRouter();\r\n  const [dropMenu, setDropMenu] = useState(false);\r\n\r\n  const toggleAlloCourceMenu = () => {\r\n    setDropMenu(!dropMenu);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ul\r\n        css={css`\r\n          height: calc(100% - 190px);\r\n          overflow-y: auto;\r\n          overflow-x: hidden;\r\n          padding: 10px 40px 10px 40px;\r\n          color: ${COLORS.TEXTGRAY};\r\n          & > li > a {\r\n            padding: 8px 0px;\r\n            display: block;\r\n\r\n            border-bottom: 1px solid ${COLORS.DARKBORDER};\r\n            font-size: 13px;\r\n            &:hover {\r\n              color: ${COLORS.WHITE};\r\n            }\r\n          }\r\n        `}\r\n      >\r\n        <li\r\n          css={\r\n            router.pathname === \"/dashboard\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/dashboard\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faColumns} /> Dashboard\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/imports\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/imports\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faFileImport} /> Imports\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/notifications\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/notifications\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faBell} /> Notifications\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/profile\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/profile\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faUser} /> Profile\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/allocated-coureces\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <a className=\"clearfix\" onClick={toggleAlloCourceMenu}>\r\n            <FontAwesomeIcon icon={faList} /> Allocated Courses\r\n            <span className=\"float-right\">\r\n              <FontAwesomeIcon\r\n                icon={faChevronRight}\r\n                css={\r\n                  dropMenu\r\n                    ? css`\r\n                        transform: rotate(90deg);\r\n                        transition: all 0.3s ease-in-out;\r\n                      `\r\n                    : css`\r\n                        transform: rotate(90deg);\r\n                        transition: all 0.3s ease-in-out;\r\n                      `\r\n                }\r\n              />\r\n            </span>\r\n          </a>\r\n          {dropMenu && (\r\n            <ul>\r\n              <li>Menu 1</li>\r\n            </ul>\r\n          )}\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/cource-coordinator-allocation\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/cource-coordinator-allocation\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faIdBadge} /> Cource Coordinator Allocation\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/class-schedule\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/class-schedule\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faCalendar} /> Class Schedule\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/mentoring\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/mentoring\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faKeyboard} /> Mentoring\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/exam-schedule\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/exam-schedule\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faCalendar} /> Exam Schedule\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/reports\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/reports\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faChartBar} /> Reports\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/query-form\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/query-form\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faPhone} /> Query Form\r\n            </a>\r\n          </Link>\r\n        </li>\r\n\r\n        <li\r\n          css={\r\n            router.pathname === \"/skins\"\r\n              ? css`\r\n                  color: ${COLORS.WHITE};\r\n                `\r\n              : css`\r\n                  color: ${COLORS.TEXTGRAY};\r\n                `\r\n          }\r\n        >\r\n          <Link href=\"/skins\">\r\n            <a>\r\n              <FontAwesomeIcon icon={faTint} /> Skins\r\n            </a>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SideNavLinks;\r\n"]},"metadata":{},"sourceType":"module"}