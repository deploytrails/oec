{"ast":null,"code":"import _css from \"@emotion/css\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\ANJI_PROJECTS_FRONTEND\\\\eCampus\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Cookies from \"js-cookie\";\nimport { COLORS } from \"../constants\";\nimport { LoginService } from \"../services/loginService\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport ChangePassword from \"../components/modals/changePassword\";\nimport ForgotPassword from \"../components/modals/forgotPassword\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar _ref = false ? {\n  name: \"1on4olv-pages-Home\",\n  styles: \"margin-top:10px;& > button{font-weight:600;font-size:14px;padding-top:4px;color:white;text-align:right;display:block;};label:pages-Home;\"\n} : {\n  name: \"1on4olv-pages-Home\",\n  styles: \"margin-top:10px;& > button{font-weight:600;font-size:14px;padding-top:4px;color:white;text-align:right;display:block;};label:pages-Home;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref2 = false ? {\n  name: \"dkwyh4-pages-Home\",\n  styles: \"position:absolute;width:360px;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);;label:pages-Home;\"\n} : {\n  name: \"dkwyh4-pages-Home\",\n  styles: \"position:absolute;width:360px;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);;label:pages-Home;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref3 = false ? {\n  name: \"pa6oq7-pages-Home\",\n  styles: \"position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);;label:pages-Home;\"\n} : {\n  name: \"pa6oq7-pages-Home\",\n  styles: \"position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);;label:pages-Home;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref4 = false ? {\n  name: \"1jlq423-pages-Home\",\n  styles: \"background:#9053c7;background:-webkit-linear-gradient(-135deg,#c850c0,#4158d0);background:-o-linear-gradient(-135deg,#c850c0,#4158d0);background:-moz-linear-gradient(-135deg,#c850c0,#4158d0);background:linear-gradient(-135deg,#c850c0,#4158d0);;label:pages-Home;\"\n} : {\n  name: \"1jlq423-pages-Home\",\n  styles: \"background:#9053c7;background:-webkit-linear-gradient(-135deg,#c850c0,#4158d0);background:-o-linear-gradient(-135deg,#c850c0,#4158d0);background:-moz-linear-gradient(-135deg,#c850c0,#4158d0);background:linear-gradient(-135deg,#c850c0,#4158d0);;label:pages-Home;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar Home = function Home() {\n  _s();\n\n  var logoImage = \"http://54.87.169.150:8081/faculty/images/png.png\";\n  var router = useRouter();\n\n  var _useState = useState(),\n      isLoginData = _useState[0],\n      setIsLoginData = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoader = _useState2[0],\n      setIsLoader = _useState2[1];\n\n  var _useState3 = useState(false),\n      isError = _useState3[0],\n      setIsError = _useState3[1];\n\n  var _useState4 = useState(false),\n      isChangePass = _useState4[0],\n      setIsChangePass = _useState4[1]; //YUP validation schema\n\n\n  var loginSchema = Yup.object().shape({\n    username: Yup.string().required(\"Required\"),\n    password: Yup.string().required(\"Required\"),\n    operation: Yup.string()\n  });\n  console.log(process.env.PORT); //store login data and to redirect dashboard\n\n  var storeLoginData = function storeLoginData(data) {\n    setIsLoginData(data);\n\n    if (data) {\n      Cookies.set(\"loggedUserStatus\", data === null || data === void 0 ? void 0 : data.departmentId);\n      Cookies.set(\"userName\", data === null || data === void 0 ? void 0 : data.employeeName);\n      Cookies.set(\"employeeID\", data === null || data === void 0 ? void 0 : data.employeeID);\n    }\n\n    if ((data === null || data === void 0 ? void 0 : data.status) === \"loggedin\") {\n      router.push(\"/dashboard\");\n      setIsLoader(false);\n    }\n\n    if ((data === null || data === void 0 ? void 0 : data.status) === \"User ID or Password is incorrect\") {\n      setIsError(true);\n      setIsLoader(false);\n    }\n\n    console.log(data);\n  }; //open changepass modal\n\n\n  var openChangePassModal = function openChangePassModal() {\n    setIsChangePass(!isChangePass);\n  };\n\n  return ___EmotionJSX(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(\"section\", {\n    className: \"h-screen block clearfix\",\n    css: _ref4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-left h-screen bg-white relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"block m-auto\",\n    css: _ref3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"img\", {\n    src: logoImage,\n    alt: \"Annamachary Educational trust\",\n    title: \"Annamachary Educational trust\",\n    className: \"lazyload block m-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(\"h1\", {\n    className: \"font-sans text-md font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Annamachary Educational Trust\"))), ___EmotionJSX(\"div\", {\n    className: \"w-6/12 float-right h-screen relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"div\", {\n    css: _ref2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"h3\", {\n    className: \"text-3xl font-bold font-sans text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Faculty Login\"), ___EmotionJSX(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      operation: \"login\"\n    },\n    validationSchema: loginSchema,\n    onSubmit: function onSubmit(values) {\n      setIsLoader(true);\n      LoginService(values).then(function (data) {\n        storeLoginData(data);\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, function (_ref5) {\n    var values = _ref5.values,\n        errors = _ref5.errors,\n        touched = _ref5.touched,\n        handleChange = _ref5.handleChange,\n        handleBlur = _ref5.handleBlur,\n        handleSubmit = _ref5.handleSubmit;\n    return ___EmotionJSX(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, ___EmotionJSX(\"label\", {\n      htmlFor: \"username relative\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      placeholder: \"Username\",\n      value: values.username,\n      className: \"block w-full text-black py-2 px-4 box-border mt-4 rounded shadow focus: outline-none\",\n      css: errors.username && touched.username && errors.username && /*#__PURE__*/_css(\"border:1px solid \", COLORS.RED, \";;label:pages-Home;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }), ___EmotionJSX(\"div\", {\n      css: /*#__PURE__*/_css(\"position:absolute;right:10px;top:70px;font-size:14px;color:\", COLORS.RED_DARKER, \";;label:pages-Home;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, errors.username && touched.username && errors.username)), ___EmotionJSX(\"label\", {\n      htmlFor: \"password relative block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      className: \"block w-full text-black py-2 px-4 box-border mt-4 rounded shadow focus: outline-none\",\n      css: errors.password && touched.password && errors.password && /*#__PURE__*/_css(\"border:1px solid \", COLORS.RED, \";;label:pages-Home;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }), ___EmotionJSX(\"div\", {\n      css: /*#__PURE__*/_css(\"position:absolute;right:10px;top:130px;font-size:14px;color:\", COLORS.RED_DARKER, \";;label:pages-Home;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, errors.password && touched.password && errors.password)), ___EmotionJSX(\"button\", {\n      type: \"submit\",\n      className: \"inline-block w-5/12 font-medium  bg-green-600 focus:outline-none py-3 px-4 uppercase rounded shadow-2xl text-white mt-4 hover:bg-gray-700\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, isLoader ? ___EmotionJSX(PulseLoader, {\n      size: \"7\",\n      color: \"#fff\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }) : \"Login\"), ___EmotionJSX(\"div\", {\n      className: \"inline-block float-right\",\n      css: _ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, ___EmotionJSX(\"button\", {\n      type: \"button\",\n      className: \"focus:outline-none\",\n      onClick: openChangePassModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, \"Change Password ?\"), ___EmotionJSX(\"button\", {\n      type: \"button\",\n      className: \"focus:outline-none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, \"Forgot Password ?\")));\n  }), isError && ___EmotionJSX(\"div\", {\n    className: \"bg-white p-2 text-left text-red-800 mt-4 rounded shadow-2xl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, \"User ID or Password is incorrect\")))), isChangePass && ___EmotionJSX(ChangePassword, {\n    openChangePassModal: openChangePassModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(Home, \"87IkAbkJ817x5jqqg/ECBm+1ciY=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/ANJI_PROJECTS_FRONTEND/eCampus/pages/index.js"],"names":["React","useState","useRouter","Formik","Yup","Cookies","COLORS","LoginService","PulseLoader","ChangePassword","ForgotPassword","Home","logoImage","router","isLoginData","setIsLoginData","isLoader","setIsLoader","isError","setIsError","isChangePass","setIsChangePass","loginSchema","object","shape","username","string","required","password","operation","console","log","process","env","PORT","storeLoginData","data","set","departmentId","employeeName","employeeID","status","push","openChangePassModal","values","then","errors","touched","handleChange","handleBlur","handleSubmit","RED","RED_DARKER"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport css from \"@emotion/css\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Cookies from \"js-cookie\";\r\nimport { COLORS } from \"../constants\";\r\nimport { LoginService } from \"../services/loginService\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport ChangePassword from \"../components/modals/changePassword\";\r\nimport ForgotPassword from \"../components/modals/forgotPassword\";\r\n\r\nconst Home = () => {\r\n  const logoImage = \"http://54.87.169.150:8081/faculty/images/png.png\";\r\n  const router = useRouter();\r\n  const [isLoginData, setIsLoginData] = useState();\r\n  const [isLoader, setIsLoader] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isChangePass, setIsChangePass] = useState(false);\r\n\r\n  //YUP validation schema\r\n  const loginSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n    operation: Yup.string(),\r\n  });\r\n\r\n  console.log(process.env.PORT);\r\n  //store login data and to redirect dashboard\r\n  const storeLoginData = (data) => {\r\n    setIsLoginData(data);\r\n    if (data) {\r\n      Cookies.set(\"loggedUserStatus\", data?.departmentId);\r\n      Cookies.set(\"userName\", data?.employeeName);\r\n      Cookies.set(\"employeeID\", data?.employeeID);\r\n    }\r\n    if (data?.status === \"loggedin\") {\r\n      router.push(\"/dashboard\");\r\n      setIsLoader(false);\r\n    }\r\n    if (data?.status === \"User ID or Password is incorrect\") {\r\n      setIsError(true);\r\n      setIsLoader(false);\r\n    }\r\n    console.log(data);\r\n  };\r\n\r\n  //open changepass modal\r\n  const openChangePassModal = () => {\r\n    setIsChangePass(!isChangePass);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section\r\n        className=\"h-screen block clearfix\"\r\n        css={css`\r\n          background: #9053c7;\r\n          background: -webkit-linear-gradient(-135deg, #c850c0, #4158d0);\r\n          background: -o-linear-gradient(-135deg, #c850c0, #4158d0);\r\n          background: -moz-linear-gradient(-135deg, #c850c0, #4158d0);\r\n          background: linear-gradient(-135deg, #c850c0, #4158d0);\r\n        `}\r\n      >\r\n        <div className=\"w-6/12 float-left h-screen bg-white relative\">\r\n          <div\r\n            className=\"block m-auto\"\r\n            css={css`\r\n              position: absolute;\r\n              top: 50%;\r\n              left: 50%;\r\n              -webkit-transform: translate(-50%, -50%);\r\n              -moz-transform: translate(-50%, -50%);\r\n              -ms-transform: translate(-50%, -50%);\r\n              transform: translate(-50%, -50%);\r\n            `}\r\n          >\r\n            <img\r\n              src={logoImage}\r\n              alt=\"Annamachary Educational trust\"\r\n              title=\"Annamachary Educational trust\"\r\n              className=\"lazyload block m-auto\"\r\n            />\r\n            <h1 className=\"font-sans text-md font-bold\">\r\n              Annamachary Educational Trust\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-6/12 float-right h-screen relative\">\r\n          <div\r\n            css={css`\r\n              position: absolute;\r\n              width: 360px;\r\n              top: 50%;\r\n              left: 50%;\r\n              -webkit-transform: translate(-50%, -50%);\r\n              -moz-transform: translate(-50%, -50%);\r\n              -ms-transform: translate(-50%, -50%);\r\n              transform: translate(-50%, -50%);\r\n            `}\r\n          >\r\n            <h3 className=\"text-3xl font-bold font-sans text-white\">\r\n              Faculty Login\r\n            </h3>\r\n            {/*Login Form Statrts */}\r\n            <Formik\r\n              initialValues={{\r\n                username: \"\",\r\n                password: \"\",\r\n                operation: \"login\",\r\n              }}\r\n              validationSchema={loginSchema}\r\n              onSubmit={(values) => {\r\n                setIsLoader(true);\r\n                LoginService(values).then((data) => {\r\n                  storeLoginData(data);\r\n                });\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <label htmlFor=\"username relative\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      placeholder=\"Username\"\r\n                      value={values.username}\r\n                      className=\"block w-full text-black py-2 px-4 box-border mt-4 rounded shadow focus: outline-none\"\r\n                      css={\r\n                        errors.username &&\r\n                        touched.username &&\r\n                        errors.username &&\r\n                        css`\r\n                          border: 1px solid ${COLORS.RED};\r\n                        `\r\n                      }\r\n                    />\r\n                    <div\r\n                      css={css`\r\n                        position: absolute;\r\n                        right: 10px;\r\n                        top: 70px;\r\n                        font-size: 14px;\r\n                        color: ${COLORS.RED_DARKER};\r\n                      `}\r\n                    >\r\n                      {errors.username && touched.username && errors.username}\r\n                    </div>\r\n                  </label>\r\n\r\n                  <label htmlFor=\"password relative block\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      className=\"block w-full text-black py-2 px-4 box-border mt-4 rounded shadow focus: outline-none\"\r\n                      css={\r\n                        errors.password &&\r\n                        touched.password &&\r\n                        errors.password &&\r\n                        css`\r\n                          border: 1px solid ${COLORS.RED};\r\n                        `\r\n                      }\r\n                    />\r\n                    <div\r\n                      css={css`\r\n                        position: absolute;\r\n                        right: 10px;\r\n                        top: 130px;\r\n                        font-size: 14px;\r\n                        color: ${COLORS.RED_DARKER};\r\n                      `}\r\n                    >\r\n                      {errors.password && touched.password && errors.password}\r\n                    </div>\r\n                  </label>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"inline-block w-5/12 font-medium  bg-green-600 focus:outline-none py-3 px-4 uppercase rounded shadow-2xl text-white mt-4 hover:bg-gray-700\"\r\n                  >\r\n                    {isLoader ? <PulseLoader size=\"7\" color=\"#fff\" /> : \"Login\"}\r\n                  </button>\r\n                  <div\r\n                    className=\"inline-block float-right\"\r\n                    css={css`\r\n                      margin-top: 10px;\r\n                      & > button {\r\n                        font-weight: 600;\r\n                        font-size: 14px;\r\n                        padding-top: 4px;\r\n                        color: white;\r\n                        text-align: right;\r\n                        display: block;\r\n                      }\r\n                    `}\r\n                  >\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"focus:outline-none\"\r\n                      onClick={openChangePassModal}\r\n                    >\r\n                      Change Password ?\r\n                    </button>\r\n                    <button type=\"button\" className=\"focus:outline-none\">\r\n                      Forgot Password ?\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n            {isError && (\r\n              <div className=\"bg-white p-2 text-left text-red-800 mt-4 rounded shadow-2xl\">\r\n                User ID or Password is incorrect\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {isChangePass && (\r\n        <ChangePassword openChangePassModal={openChangePassModal} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}